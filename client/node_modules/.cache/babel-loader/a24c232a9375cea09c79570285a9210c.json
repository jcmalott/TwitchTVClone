{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malot\\\\OneDrive\\\\Desktop\\\\Job\\\\Web Development Course\\\\Modern React with Redux\\\\section20\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.jsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Props: \" + this.props.match.params); // this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm //initialValues is a param from redux\n    // initialValues={{title: \"EDIT ME\", description: \"CHANGE ME TO\"}}\n    //passes all values with stream\n    // initialValues={this.props.stream}\n    //will only pass title and description from stream\n    , {\n      initialValues: _.pick(this.props.stream, \"title\", \"description\"),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"Stream Edit State\");\n  console.log(\"Streams: \" + state.streams);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:/Users/malot/OneDrive/Desktop/Job/Web Development Course/Modern React with Redux/section20/client/src/components/streams/StreamEdit.jsx"],"names":["React","_","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","console","log","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAMvCC,QANuC,GAM3BC,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACD,KARsC;AAAA;;AACvCK,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAa,KAAKN,KAAL,CAAWC,KAAX,CAAiBC,MAA1C,EADiB,CAEjB;AACD;;AAMDK,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKP,KAAL,CAAWQ,MAAf,EAAsB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,UAAD,CACE;AACA;AAEA;AACA;AAEA;AAPF;AAQE,MAAA,aAAa,EAAEjB,CAAC,CAACkB,IAAF,CAAO,KAAKT,KAAL,CAAWQ,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CARjB;AASE,MAAA,QAAQ,EAAE,KAAKV,QATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAeH;;AA9BsC;;AAiCzC,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CP,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAaK,KAAK,CAACE,OAA/B;AACA,SAAO;AAACL,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACD,CAJD;;AAMA,eAAeX,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDE,UAApD,CAAf","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchStream, editStream} from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount(){\r\n    console.log(\"Props: \"  + this.props.match.params);\r\n    // this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.editStream(this.props.match.params.id, formValues);\r\n  }\r\n\r\n  render(){\r\n      if(!this.props.stream){\r\n        return <div>Loading...</div>;\r\n      }\r\n\r\n      return(\r\n        <div>\r\n          <h3>Edit a Stream</h3>\r\n          <StreamForm\r\n            //initialValues is a param from redux\r\n            // initialValues={{title: \"EDIT ME\", description: \"CHANGE ME TO\"}}\r\n\r\n            //passes all values with stream\r\n            // initialValues={this.props.stream}\r\n\r\n            //will only pass title and description from stream\r\n            initialValues={_.pick(this.props.stream, \"title\", \"description\")}\r\n            onSubmit={this.onSubmit}/>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(\"Stream Edit State\");\r\n  console.log(\"Streams: \" +state.streams);\r\n  return {stream: state.streams[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);\r\n"]},"metadata":{},"sourceType":"module"}