{"ast":null,"code":"import _ from \"lodash\";\nexport default ((state = {}, action) => {\n  // console.log(action.type);\n  // console.log(action.payload);\n  // console.log([action.payload.id]);\n  switch (action.type) {\n    case \"FETCH_STREAM\":\n      console.log(\"Fetch Stream reducer\"); // [ ] means that we don't know the name of the key yet\n\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case \"CREATE_STREAM\":\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case \"EDIT_STREAM\":\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case \"DELETE_STREAM\":\n      //Delete stream only returns a id\n      return _.omit(state, action.payload);\n\n    case \"FETCH_STREAMS\":\n      console.log(\"Fetch streams reducer\"); //mayKeys takes an array and turns it into a object\n      //id argument means take id from array and make it the key for each object\n      //-the value is the rest of the data withn that single index of the array\n\n      return { ...state,\n        ..._.mapKeys(action.payload, \"id\")\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/malot/OneDrive/Desktop/Job/Web Development Course/Modern React with Redux/section20/client/src/reducers/streamReducer.jsx"],"names":["_","state","action","type","console","log","payload","id","omit","mapKeys"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC;AACA;AACA;AAEA,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADF,CAEA;;AACE,aAAO,EAAC,GAAGJ,KAAJ;AAAW,SAACC,MAAM,CAACI,OAAP,CAAeC,EAAhB,GAAqBL,MAAM,CAACI;AAAvC,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAC,GAAGL,KAAJ;AAAW,SAACC,MAAM,CAACI,OAAP,CAAeC,EAAhB,GAAqBL,MAAM,CAACI;AAAvC,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAC,GAAGL,KAAJ;AAAW,SAACC,MAAM,CAACI,OAAP,CAAeC,EAAhB,GAAqBL,MAAM,CAACI;AAAvC,OAAP;;AACF,SAAK,eAAL;AACE;AACA,aAAON,CAAC,CAACQ,IAAF,CAAOP,KAAP,EAAcC,MAAM,CAACI,OAArB,CAAP;;AACF,SAAK,eAAL;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADF,CAEA;AACA;AACA;;AACE,aAAO,EAAC,GAAGJ,KAAJ;AAAW,WAAGD,CAAC,CAACS,OAAF,CAAUP,MAAM,CAACI,OAAjB,EAA0B,IAA1B;AAAd,OAAP;;AACF;AACC,aAAOL,KAAP;AAnBH;AAqBD,CA1BD","sourcesContent":["import _ from \"lodash\";\r\n\r\nexport default (state = {}, action) => {\r\n  // console.log(action.type);\r\n  // console.log(action.payload);\r\n  // console.log([action.payload.id]);\r\n\r\n  switch(action.type){\r\n    case \"FETCH_STREAM\":\r\n      console.log(\"Fetch Stream reducer\");\r\n    // [ ] means that we don't know the name of the key yet\r\n      return {...state, [action.payload.id]: action.payload}\r\n    case \"CREATE_STREAM\":\r\n      return {...state, [action.payload.id]: action.payload}\r\n    case \"EDIT_STREAM\":\r\n      return {...state, [action.payload.id]: action.payload}\r\n    case \"DELETE_STREAM\":\r\n      //Delete stream only returns a id\r\n      return _.omit(state, action.payload);\r\n    case \"FETCH_STREAMS\":\r\n      console.log(\"Fetch streams reducer\");\r\n    //mayKeys takes an array and turns it into a object\r\n    //id argument means take id from array and make it the key for each object\r\n    //-the value is the rest of the data withn that single index of the array\r\n      return {...state, ..._.mapKeys(action.payload, \"id\")}\r\n    default:\r\n     return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}