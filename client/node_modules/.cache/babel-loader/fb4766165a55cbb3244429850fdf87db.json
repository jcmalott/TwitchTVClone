{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malot\\\\OneDrive\\\\Desktop\\\\Job\\\\Web Development Course\\\\Modern React with Redux\\\\section20\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\"; // import {fetchStreams} from \"../../actions\";\n\nimport streams from \"../../apis/streams\"; //we only want fetchStreams to be called once\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    // this.props.fetchStreams();\n    fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right floated content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/streams/edit/${stream.id}`,\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/streams/delete/${stream.id}`,\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, this.renderAdmin(stream), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"header\",\n        to: `/streams/${stream.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, stream.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, stream.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"ui button primary\",\n        to: \"/streams/new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Create Stream\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //turn objects into a array\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  console.log(response.data);\n  dispatch({\n    type: \"FETCH_STREAMS\",\n    payload: response.data\n  });\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:/Users/malot/OneDrive/Desktop/Job/Web Development Course/Modern React with Redux/section20/client/src/components/streams/StreamList.jsx"],"names":["React","connect","Link","streams","StreamList","Component","componentDidMount","fetchStreams","renderAdmin","stream","userId","props","currentUserId","id","renderList","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth","dispatch","response","get","console","log","data","type","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n// import {fetchStreams} from \"../../actions\";\r\nimport streams from \"../../apis/streams\";\r\n\r\n//we only want fetchStreams to be called once\r\nclass StreamList extends React.Component {\r\n  componentDidMount(){\r\n    // this.props.fetchStreams();\r\n    fetchStreams();\r\n  }\r\n\r\n  renderAdmin(stream){\r\n    if(stream.userId === this.props.currentUserId){\r\n      return(\r\n        <div className=\"right floated content\">\r\n          {/* <button className=\"ui button primary\">Edit</button> */}\r\n          {/* <button className=\"ui button negative\">Delete</button> */}\r\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\r\n          <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderList(){\r\n    return this.props.streams.map(stream => {\r\n      return(\r\n        <div className=\"item\" key={stream.id}>\r\n          {this.renderAdmin(stream)}\r\n          <i className=\"large middle aligned icon camera\"/>\r\n          <div className=\"content\">\r\n            <Link className=\"header\" to={`/streams/${stream.id}`}>{stream.title}</Link>\r\n            <div className=\"description\">{stream.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderCreate(){\r\n    if(this.props.isSignedIn){\r\n      return(\r\n        <div style={{textAlign: \"right\"}}>\r\n          <Link className=\"ui button primary\" to=\"/streams/new\">\r\n            Create Stream\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h2>Streams</h2>\r\n        <div className=\"ui celled list\">{this.renderList()}</div>\r\n        {this.renderCreate()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  //turn objects into a array\r\n  return {\r\n    streams: Object.values(state.streams),\r\n    currentUserId: state.auth.userId,\r\n    isSignedIn: state.auth.isSignedIn\r\n  }\r\n}\r\n\r\nconst fetchStreams = () => async dispatch => {\r\n  const response = await streams.get(\"/streams\");\r\n\r\n console.log(response.data);\r\n  dispatch({type: \"FETCH_STREAMS\", payload: response.data});\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}