{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malot\\\\OneDrive\\\\Desktop\\\\Job\\\\Web Development Course\\\\Modern React with Redux\\\\section20\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      //redux-form will now take care of this\n      // event.preventDefault();\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Create a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {}; //title and description are the name fields of field\n  //these errors are sent to the component method\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nconst formWrapper = reduxForm({\n  form: \"streamCreate\",\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream\n})(formWrapper);","map":{"version":3,"sources":["C:/Users/malot/OneDrive/Desktop/Job/Web Development Course/Modern React with Redux/section20/client/src/components/streams/StreamCreate.jsx"],"names":["React","connect","createStream","StreamForm","StreamCreate","Component","onSubmit","formValues","props","render","validate","errors","title","description","formWrapper","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAEzCC,QAFyC,GAE7BC,UAAD,IAAgB;AACzB;AACA;AAEA,WAAKC,KAAL,CAAWN,YAAX,CAAwBK,UAAxB;AACD,KAPwC;AAAA;;AASzCE,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKH,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhBwC;;AAmB3C,MAAMI,QAAQ,GAAIH,UAAD,IAAgB;AAC/B,QAAMI,MAAM,GAAG,EAAf,CAD+B,CAG/B;AACA;;AACA,MAAG,CAACJ,UAAU,CAACK,KAAf,EAAqB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAG,CAACL,UAAU,CAACM,WAAf,EAA2B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AAED,SAAOF,MAAP;AACD,CAbD;;AAeA,MAAMG,WAAW,GAAGC,SAAS,CAAC;AAC5BC,EAAAA,IAAI,EAAE,cADsB;AAE5BN,EAAAA,QAAQ,EAAEA;AAFkB,CAAD,CAAT,CAGjBN,YAHiB,CAApB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA8BY,WAA9B,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createStream} from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamCreate extends React.Component {\r\n  //formValues will be past instead of an event\r\n  onSubmit = (formValues) => {\r\n    //redux-form will now take care of this\r\n    // event.preventDefault();\r\n\r\n    this.props.createStream(formValues);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h3>Create a Stream</h3>\r\n        <StreamForm onSubmit={this.onSubmit}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  //title and description are the name fields of field\r\n  //these errors are sent to the component method\r\n  if(!formValues.title){\r\n    errors.title = \"You must enter a title\";\r\n  }\r\n  if(!formValues.description){\r\n    errors.description = \"You must enter a description\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nconst formWrapper = reduxForm({\r\n  form: \"streamCreate\",\r\n  validate: validate\r\n})(StreamCreate);\r\n\r\nexport default connect(null, {createStream})(formWrapper);\r\n"]},"metadata":{},"sourceType":"module"}