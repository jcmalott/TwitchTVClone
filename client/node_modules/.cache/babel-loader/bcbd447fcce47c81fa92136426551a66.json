{"ast":null,"code":"import streams from \"../apis/streams\";\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n}; //so we can access the database of streams\n\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n  dispatch({\n    type: \"CREATE_STREAM\",\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: \"FETCH_STREAMS\",\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: \"FETCH_STREAM\",\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: \"EDIT_STREAM\",\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: \"DELETE_STREAM\",\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:/Users/malot/OneDrive/Desktop/Job/Web Development Course/Modern React with Redux/section20/client/src/actions/index.jsx"],"names":["streams","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMG,YAAY,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AAC1D,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA1C,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACa,GAAR,CAAY,UAAZ,CAAvB;AAEAL,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA1C,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACa,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKR,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC9D,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACiB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BR,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAE,aAAP;AAAsBC,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AACpD,QAAMR,OAAO,CAACmB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAP,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,OAAO,EAAEW;AAAjC,GAAD,CAAR;AACD,CAJM","sourcesContent":["import streams from \"../apis/streams\";\r\n\r\nexport const signIn = (userId) => {\r\n  return {\r\n    type: \"SIGN_IN\",\r\n    payload: userId\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: \"SIGN_OUT\"\r\n  }\r\n}\r\n\r\n//so we can access the database of streams\r\nexport const createStream = formValues => async dispatch => {\r\n  const response = await streams.post(\"/streams\", formValues);\r\n\r\n  dispatch({type: \"CREATE_STREAM\", payload: response.data});\r\n}\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n  const response = await streams.get(\"/streams\");\r\n\r\n  dispatch({type: \"FETCH_STREAMS\", payload: response.data});\r\n}\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n  const response = await streams.get(`/streams/${id}`);\r\n\r\n  dispatch({type: \"FETCH_STREAM\", payload: response.data});\r\n}\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n  const response = await streams.put(`/streams/${id}`, formValues);\r\n\r\n  dispatch({type: \"EDIT_STREAM\", payload: response.data});\r\n}\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n  await streams.delete(`/streams/${id}`);\r\n\r\n  dispatch({type: \"DELETE_STREAM\", payload: id});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}