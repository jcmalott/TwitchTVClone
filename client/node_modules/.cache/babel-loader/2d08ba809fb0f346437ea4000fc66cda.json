{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malot\\\\OneDrive\\\\Desktop\\\\Job\\\\Web Development Course\\\\Modern React with Redux\\\\section20\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {};\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      initialValues: {\n        title: \"EDIT ME\",\n        description: \"CHANGE ME TO\"\n      },\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:/Users/malot/OneDrive/Desktop/Job/Web Development Course/Modern React with Redux/section20/client/src/components/streams/StreamEdit.jsx"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","componentDidMount","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK3BC,UAAD,IAAgB,CAE1B,CAPsC;AAAA;;AACvCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAMDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAE;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,WAAW,EAAE;AAAhC,OADjB;AAEE,MAAA,QAAQ,EAAE,KAAKV,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AASH;;AAvBsC;;AA0BzC,MAAMW,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAACL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeZ,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDE,UAApD,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchStream, editStream} from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount(){\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (formValues) => {\r\n\r\n  }\r\n\r\n  render(){\r\n      if(!this.props.stream){\r\n        return <div>Loading...</div>;\r\n      }\r\n\r\n      return(\r\n        <div>\r\n          <h3>Edit a Stream</h3>\r\n          {/* initialValues is a param from redux*/}\r\n          <StreamForm\r\n            initialValues={{title: \"EDIT ME\", description: \"CHANGE ME TO\"}}\r\n            onSubmit={this.onSubmit}/>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {stream: state.streams[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);\r\n"]},"metadata":{},"sourceType":"module"}